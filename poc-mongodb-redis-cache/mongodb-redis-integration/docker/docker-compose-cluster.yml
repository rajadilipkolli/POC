version: "3.6"
services:
  mongo:
    image: mongo:6.0.3
    volumes:
      - mongo-data:/data/db/mongo
    ports:
      - 27017:27017

  redis1:
    image: redis
    ports:
      - 7000:7000
    volumes:
      - ./docker-data/redis-1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      app_net:
        ipv4_address: 172.18.0.2

  redis2:
    image: redis
    ports:
      - 7001:7001
    volumes:
      - ./docker-data/redis-2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      app_net:
        ipv4_address: 172.18.0.3

  redis3:
    image: redis
    ports:
      - 7002:7002
    volumes:
      - ./docker-data/redis-3.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      app_net:
        ipv4_address: 172.18.0.4

  redis-cluster-setup:
    image: redis
    command: sh -c "
      sleep 5
      && yes yes | redis-cli --cluster create 172.18.0.2:7000 172.18.0.3:7001 172.18.0.4:7002 \
      --cluster-replicas 0
      && redis-cli --cluster check 172.18.0.2:7000"
    networks:
      app_net:
    depends_on:
      - redis1
      - redis2
      - redis3

  redisinsight:
    image: 'redislabs/redisinsight:latest'
    ports:
      - '127.0.0.1:8001:8001'

volumes:
  mongo-data:

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24